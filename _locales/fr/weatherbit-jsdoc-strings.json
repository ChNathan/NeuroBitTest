{
  "weatherbit": "Mary West @ SparkFun Electronics\nRyan Mortenson https://github.com/ryanjmortenson\nJune 13, 2017\nhttps://github.com/sparkfun/pxt-weather-bit\nDevelopment environment specifics:\nWritten in Microsoft PXT\nTested with a SparkFun weather:bit for micro:bit\n* This code is released under the [MIT License](http://opensource.org/licenses/MIT).\nPlease review the LICENSE.md file included with this example. If you have any questions\nor concerns with licensing, please contact techsupport@sparkfun.com.\nDistributed as-is; no warranty is given.\n\nFunctions to operate the weather:bit\n\nMary West @ SparkFun Electronics\nRyan Mortenson https://github.com/ryanjmortenson\nHarry Fairhead @ IoT-Programmer\nJune 13, 2017\nhttps://github.com/sparkfun/pxt-weather-bit\n* Development environment specifics:\nWritten in Microsoft PXT\nTested with a SparkFun weather:bit for micro:bit\n* This code is released under the [MIT License](http://opensource.org/licenses/MIT).\nPlease review the LICENSE.md file included with this example. If you have any questions\nor concerns with licensing, please contact techsupport@sparkfun.com.\nDistributed as-is; no warranty is given.",
  "weatherbit.altitude": "Collige les données du capteur de pression atmosphérique. \nAjuste en fonction du niveau de la mer (altimètre). \nCalcule l'altitude et retourne l'altitude absolue en mètres (m) avec deux décimales.",
  "weatherbit.humidity": "Collige les données du capteur d'humidité de l'air (hydromètre). \nDivise chaque lecture de 5 chiffres par 1024. \nRetourne un résultat d'humidité relative en pourcentage (%).",
  "weatherbit.pressure": "Collige les données du capteur de pression atmosphérique (baromètre). \nDivise chaque lecture de 8 chiffres par 25600. \nRetourne un résultat en hectopascal (hPa) avec deux décimales.",
  "weatherbit.rain": "Collige les données du capteur de précipitation (pluviomètre). \nCalcule la fréquence à laquelle la jauge se remplit et se vide.\nRetourne la quantité en pouce (1 pouce impérial équivaut à 2,54cm).",
  "weatherbit.soilMoisture": "Lire le capteur d'humidité du sol. \nRetourne un résultat entre 0 et 1023 (sur l’échelle analogique, 0 signifie sec et 1023 signifie humide).\nCe n'est pas un hygromètre pour mesurer l'humidité de l'air, mais un circuit électrique estimant la conductance du sol (l'eau est un conducteur d’électricité). \nL'expérience fonctionne aussi pour mesurer l'humidité des doigts, par example. \nLa capteur se pose entre deux doigts. \nLes mains moites sont plus conductrice d'électricité.",
  "weatherbit.soilTemperature": "Collige les donnée du capteur de température du sol (thermomètre). \nDivise chaque lecture de 4 chiffres par 100. \nRetourne la température en centième de degrés Celsius.",
  "weatherbit.startRainMonitoring": "Règle la broche P02. \nActive le capteur de précipitation (pluviomètre).",
  "weatherbit.startWeatherMonitoring": "Active le pilote de la carte BME. \nCette carte capte des données atmosphériques grâce à ses capteurs reliés au micro:bit par le protocole I2C. La carte peut aussi envoyer ses données par le protocole UART.",
  "weatherbit.startWindMonitoring": "Active le capteur de vitesse du vent (anémomètre).",
  "weatherbit.temperature": "Collige les donnée du capteur de température de l'air (thermomètre). \nDivise chaque lecture de 4 chiffres par 100. \nRetourne la température en centième de degrés Celsius.",
  "weatherbit.windDirection": "Collige les données du capteur de la direction du vent (girouette). \nRetourne une chaine de caractères indiquant une des 8 directions (N, E, S, W, NE, NW, SE, SW).",
  "weatherbit.windSpeed": "Collige les données du capteur de vitesse du vent (anémomètre). \nCalcule la vitesse en miles par heure (mph) chaque 2 secondes (1 mph impérial equivaut à 1,61km/h)."
}
